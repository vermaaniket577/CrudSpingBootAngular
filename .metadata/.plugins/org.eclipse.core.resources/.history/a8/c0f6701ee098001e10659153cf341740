package com.web.service;

import java.util.List;  
import org.springframework.beans.factory.annotation.Autowired;  
import org.springframework.stereotype.Service;  
import org.springframework.transaction.annotation.Transactional;

import com.web.Repository.studentRepository;
import com.web.model.Student;  

 

import java.util.List;  
import org.springframework.beans.factory.annotation.Autowired;  
import org.springframework.web.bind.annotation.CrossOrigin;  
import org.springframework.web.bind.annotation.DeleteMapping;  
import org.springframework.web.bind.annotation.GetMapping;  
import org.springframework.web.bind.annotation.PathVariable;  
import org.springframework.web.bind.annotation.PostMapping;  
import org.springframework.web.bind.annotation.RequestBody;  
import org.springframework.web.bind.annotation.RequestMapping;  
import org.springframework.web.bind.annotation.RestController;  
  
import Model.Student;  
import Service.Student_Service;  
  
@RestController  
@CrossOrigin(origins="http://localhost:4200")  
@RequestMapping(value="/api")  
public class studentServiceimpl {  
      
    @Autowired  
    private studentServiceimpl studentServiceimpl ;  
      
    @PostMapping("save-student")  
    public Student createStudent(@RequestBody Student student) {
        return studentServiceimpl.createStudent(student);
    }
      
    @GetMapping("students-list")  
    public List<Student> readStudents() {
        return studentServiceimpl.readStudents();
          
    }  
      
    @DeleteMapping("delete-student/{student_id}")  
    public boolean deleteStudent(@PathVariable("student_id") int student_id,Student student) {  
        student.setStudent_id(student_id);  
        return studentServiceimpl.deleteStudent(student);  
    }  
  
    @GetMapping("student/{student_id}")  
    public List<Student> allstudentByID(@PathVariable("student_id") int student_id,Student student) {  
         student.setStudent_id(student_id);  
         return studentServiceimpl.getStudentByID(student);  
          
    }  
      
    @PostMapping("update-student/{student_id}")  
    public boolean updateStudent(@RequestBody Student student,@PathVariable("student_id") int student_id) {  
        student.setStudent_id(student_id);  
        return stud
  
    @Override  
    public List<Student> getStudentByID(Student student) {  
        return studentrepo.getStudentByID(student);  
    }  
    
 // UPDATE
    public Student updateStudent(int Id, Student studentDetails) {
            Student student = studentrepo.findById(Id).get();
            student.setName(studentDetails.getName());
            student.setEmail(studentDetails.getEmail());
            student.setBranch(studentDetails.getBranch());
            
            return studentrepo.save(student);                                
    }
  
    @Override  
    public boolean updateStudent(Student student) {  
        return studentrepo.updateStudent(student);  
    }  
  
}  